// Jump instructions test - revised to stay within memory range
00100093 // addi x1, x0, 1      # x1 = 1 (initial value)
01000137 // lui x2, 0x1000      # x2 = 0x00100000 (arbitrary high value)
00C000EF // jal x1, 12          # Jump to PC+12, x1 = PC+4
00100F93 // addi x31, x0, 1     # This is SKIPPED
00200F93 // addi x31, x0, 2     # This is SKIPPED
00300F93 // addi x31, x0, 3     # This is executed
05000093 // addi x1, x0, 80     # Set x1 = 80 (a location we can jump to)
000080E7 // jalr x1, x1, 0      # Jump to x1(80), x1 = PC+4
00400F93 // addi x31, x0, 4     # This is SKIPPED
00000013 // nop                 # Padding
00000013 // nop                 # Padding
00000013 // nop                 # Padding
00000013 // nop                 # Padding
00000013 // nop                 # Padding
00000013 // nop                 # Padding
00000013 // nop                 # Padding
00000013 // nop                 # Padding
00000013 // nop                 # Padding
00000013 // nop                 # Padding
00000013 // nop                 # Padding
00600F93 // addi x31, x0, 6     # Final state