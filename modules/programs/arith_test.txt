// R-type instructions test
00000093 // addi x1, x0, 0     # Initialize x1 = 0
00500113 // addi x2, x0, 5     # Initialize x2 = 5
00A00193 // addi x3, x0, 10    # Initialize x3 = 10
003100B3 // add x1, x2, x3     # x1 = x2 + x3 = 15
40310133 // sub x2, x2, x3     # x2 = x2 - x3 = -5
0011F1B3 // and x3, x3, x1     # x3 = x3 & x1 = 10 & 15 = 10
0011E233 // or x4, x3, x1      # x4 = x3 | x1 = 10 | 15 = 15
0011C2B3 // xor x5, x3, x1     # x5 = x3 ^ x1 = 10 ^ 15 = 5
0021A333 // slt x6, x3, x2     # x6 = (x3 < x2) ? 1 : 0 = 0 (10 not < -5)
0021B3B3 // sltu x7, x3, x2    # x7 = (x3 < x2) ? 1 : 0 = 1 (10 < 0xFFFFFFFB)
00211433 // sll x8, x2, x2     # x8 = x2 << x2 = -5 << -5 (becomes -5 << 27) = 0xFFFFFF88
0021D4B3 // srl x9, x3, x2     # x9 = x3 >> x2 = 10 >> -5 (becomes 10 >> 27) = 0
4021D533 // sra x10, x3, x2    # x10 = x3 >>> x2 = 10 >>> -5 (becomes 10 >>> 27) = 0